// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$readolio-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($readolio-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($readolio-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($readolio-theme);
/* You can add global styles to this file, and also import other style files */

@import '../node_modules/tippy.js/dist/tippy';
@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

h1 {
  font-size: 2.5rem;
}

h1,
h2,
h3 {
  font-weight: 700;
}

[placeholder]:empty::before {
  content: attr(placeholder);
  color: #adb5bd;
  float: left;
  height: 0;
  pointer-events: none;
}

// Add placeholder to the figcaption
figcaption.focused > div:has(> br)::before {
  content: 'Optional image caption...';
  color: #adb5bd;
  float: left;
  height: 0;
  pointer-events: none;
}

blockquote strong {
  font-weight: normal;
}

@layer base {
  ul,
  ol {
    list-style: revert;
    padding: revert;
    margin: revert;
  }
}

// Medium Overlay
.medium-zoom-overlay {
  z-index: 10;
}

.medium-zoom-image--opened {
  z-index: 100;
}

// TipTap

.tiptap[contenteditable='false'] a {
  cursor: pointer;
}

.toolbar-active {
  color: #2db5e2;
}

// Width of children
.tiptap > * {
  width: 50%;
  display: block;
  margin: 0 auto;
}

.tiptap > *:not(h3) {
  margin-bottom: 2rem !important;
}

.tiptap > h3 {
  margin-bottom: 0.5rem !important;
}

.tiptap {
  outline: none;
  font-size: 1.25rem;
}

.tiptap p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.tiptap h2 {
  font-size: 1.5em;
}

button[disabled] i {
  color: #adb5bd;
}

/* Blockquote main style */
blockquote {
  position: relative;
  font-family: 'Montserrat', sans-serif;
  padding: 30px 0;
  width: 100%;
  z-index: 1;
  align-self: center;
  border-top: solid 1px lightgray;
  border-bottom: solid 1px lightgray;
}

/* Blockquote header */
blockquote p {
  position: relative;
  font-style: italic;
  font-size: 1.5rem;
  line-height: 1;
  margin: 0;
  font-weight: 100;
}

/* Blockquote right double quotes */
blockquote:after {
  position: absolute;
  content: '‚Äù';
  font-size: 6rem;
  line-height: 0;
  bottom: -1.8rem;
  right: 2rem;
}

.tiptap a {
  // color: rgb(42, 155, 192);
  cursor: pointer;
  text-decoration: underline;
  cursor: text;
}

// Material

.mat-mdc-dialog-surface {
  border-radius: 0.5rem !important;
}
